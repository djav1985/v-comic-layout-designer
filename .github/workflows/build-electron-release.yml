name: Build Electron Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Semantic version for this release (e.g. 1.0.0 or v1.0.0)'
        required: true

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Prepare version metadata
        id: version
        shell: pwsh
        run: |
          $inputVersion = '${{ github.event.inputs.release_version }}'
          if (-not $inputVersion) {
            throw 'release_version input is required.'
          }
          $tag = $inputVersion
          if (-not $tag.StartsWith('v')) {
            $tag = 'v' + $tag
          }
          $semver = $inputVersion
          if ($semver.StartsWith('v')) {
            $semver = $semver.Substring(1)
          }
          "tag=$tag" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          "semver=$semver" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # Cache Composer packages
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-

      - name: Configure npm version
        run: npm pkg set version=${{ steps.version.outputs.semver }}

      - name: Install Node.js dependencies
        run: npm ci

      - name: Install PHP dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Download PHP runtime
        shell: pwsh
        run: |
          $phpUrl = 'https://downloads.php.net/~windows/releases/latest/php-8.2-nts-Win32-vs16-x64-latest.zip'
          $phpZip = "$Env:RUNNER_TEMP\php-runtime.zip"

          try {
            Invoke-WebRequest -Uri $phpUrl -OutFile $phpZip
          } catch {
            Write-Host "Latest link failed, falling back to pinned 8.2.29..."
            Invoke-WebRequest -Uri 'https://downloads.php.net/~windows/releases/php-8.2.29-nts-Win32-vs16-x64.zip' -OutFile $phpZip
          }

          $extractPath = "$Env:RUNNER_TEMP\php-runtime"
          if (Test-Path $extractPath) {
            Remove-Item -Path $extractPath -Recurse -Force
          }
          Expand-Archive -Path $phpZip -DestinationPath $extractPath -Force
          $phpSource = Get-ChildItem -Path $extractPath -Directory | Select-Object -First 1
          if (-not $phpSource) {
            $phpSource = Get-Item -Path $extractPath
          }
          New-Item -ItemType Directory -Path "resources\php" -Force | Out-Null
          Copy-Item -Path (Join-Path $phpSource.FullName '*') -Destination "resources\php" -Recurse -Force

      - name: Build Windows installer
        run: npm run dist -- --publish=never

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: v-comic-layout-designer-${{ steps.version.outputs.semver }}
          path: dist/v-comic-layout-designer-Setup-${{ steps.version.outputs.semver }}.exe

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: V Comic Layout Designer ${{ steps.version.outputs.tag }}
          files: dist/v-comic-layout-designer-Setup-${{ steps.version.outputs.semver }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate build attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-path: dist/v-comic-layout-designer-Setup-${{ steps.version.outputs.semver }}.exe
