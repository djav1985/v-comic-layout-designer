name: Build Electron Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Semantic version for this release (e.g. 1.0.0 or v1.0.0)"
        required: true

jobs:
  build:
    runs-on: windows-latest
    outputs:
      tag: ${{ steps.version.outputs.tag }}
      semver: ${{ steps.version.outputs.semver }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: dev

      - name: Prepare version metadata
        id: version
        shell: pwsh
        run: |
          $inputVersion = '${{ github.event.inputs.release_version }}'
          if (-not $inputVersion) { throw 'release_version input is required.' }
          $tag = $inputVersion
          if (-not $tag.StartsWith('v')) { $tag = 'v' + $tag }
          $semver = $inputVersion
          if ($semver.StartsWith('v')) { $semver = $semver.Substring(1) }
          "tag=$tag" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          "semver=$semver" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Node.js dependencies
        run: npm ci
        shell: pwsh

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-${{ runner.os }}-

      - name: Install PHP dependencies and runtime
        run: |
          composer install --no-dev --optimize-autoloader
          $phpUrl = 'https://downloads.php.net/~windows/releases/latest/php-8.2-nts-Win32-vs16-x64-latest.zip'
          $phpZip = "$Env:RUNNER_TEMP\php-runtime.zip"
          Invoke-WebRequest -Uri $phpUrl -OutFile $phpZip
          $extractPath = "$Env:RUNNER_TEMP\php-runtime"
          if (Test-Path $extractPath) { Remove-Item -Path $extractPath -Recurse -Force }
          Expand-Archive -Path $phpZip -DestinationPath $extractPath -Force
          $phpSource = Get-ChildItem -Path $extractPath -Directory | Select-Object -First 1
          if (-not $phpSource) { $phpSource = Get-Item -Path $extractPath }
          New-Item -ItemType Directory -Path "resources\php" -Force | Out-Null
          Copy-Item -Path (Join-Path $phpSource.FullName '*') -Destination "resources\php" -Recurse -Force
        shell: pwsh

      - name: Cache Electron
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/electron
            ~/.cache/electron-builder
          key: electron-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: electron-${{ runner.os }}-

      - name: Build Electron app
        run: npx electron-builder --win --x64 --publish never
        shell: pwsh

      - name: Prepare artifacts
        shell: pwsh
        run: |
          mkdir dist/renamed
          $exe = Get-ChildItem dist -Filter *.exe | Select-Object -First 1
          $renamed = "dist/renamed/v-comic-layout-designer-${{ steps.version.outputs.semver }}-win-x64.exe"
          Move-Item $exe.FullName $renamed
          Get-FileHash $renamed -Algorithm SHA256 | ForEach-Object { $_.Hash } |
            Out-File -Encoding ASCII "$renamed.sha256"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/renamed/*
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/renamed
          merge-multiple: true # <--- This flattens artifacts into dist/renamed/!

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.build.outputs.tag }}
          name: V Comic Layout Designer ${{ needs.build.outputs.tag }}
          files: dist/renamed/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}          path: ./dist

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.build.outputs.tag }}
          name: V Comic Layout Designer ${{ needs.build.outputs.tag }}
          files: dist/renamed/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
